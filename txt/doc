this attempts to explain the code simply, mostly for myself to understand it more clearly

tensor is the basic object
tensor handles : data (float *), data_size, shape, stride, offset.
if it is not a view, bool owns_data is true. false otherwise. if it is a view it holds the same data as the original tensor
tensor have a grad which is a tensor *
if requires_grad is true, a empty tensor is initted. if false, grad is set to nullptr
tensor have a operation that tracks the operation that created, and a operands vec that tracks the tensors which created it through the operation

tensor shape constructor:
sets shape equal to input shape. sets owns_data = true.
sets requires grad to input / default true. if grad true set grad shape, stride, offset equal to this tensor 

contiguous function:
makes a tensor's data ordering match its shape ordering
maybe some view operations require the function to be contiguous











... insert more description ... grad ...


operations are calculations done on tensors, that have parallized implementations in the engine folder

